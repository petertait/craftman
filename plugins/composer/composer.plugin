#!/bin/sh
set -e
PLUGIN_NAME="composer"

composer__info()
{
  echo "PHP Composer"
}

composer__usage()
{
  echo " $CM composer:lock         Regenerate composer.lock for your composer.json file"
  echo " $CM composer:prepare      Generate required files to deploy to Heroku"
}

composer__config()
{
  COMPOSER__JSON="$CM_PROJECT_PATH/composer.json"
  COMPOSER__INSTALL="100_composer.sh"
  COMPOSER__INSTALL_PATH="$CM_INSTALLER_PATH/$COMPOSER__INSTALL"
}

composer__generate()
{
  cm_gitignore_add "composer.phar" "$CM_SCRIPTS_PATH"
  cm_can_generate "$COMPOSER__INSTALL_PATH"
  if [ "$CM_GENERATE_FILE" != "" ]; then
    cat > "$CM_GENERATE_FILE" <<- EOF
#!/bin/sh
set -e
echo "===> Installing PHP Composer"
cd /config
curl -sS https://getcomposer.org/installer | php
EOF
  fi
}

composer__prepare()
{
  cm_log "Preparing composer.json"
  __composer__create_json
}

composer__lock()
{
  [ -f "$CM_PROJECT_PATH/composer.json" ] || cm_abort "composer.json is required"
  cm_log "Generating composer.lock"
  mkdir -p "$CM_SCRIPTS_PATH/composer"
  cm_gitignore_add "*" "$CM_SCRIPTS_PATH/composer"
  cm_gitignore_add "!.gitignore" "$CM_SCRIPTS_PATH/composer"
  docker cp "$CM_PROJECT_PATH/composer.json" "$(cm_craft_container):/config/composer"
  cm_craft_exec "cd /config/composer && /config/composer.phar install && /config/composer.phar update"
  if [ -f "$CM_PROJECT_PATH/composer.lock" ]; then
    mv -f "$CM_PROJECT_PATH/composer.lock" "$CM_PROJECT_PATH/composer.lock.bak"
  fi
  cp "$CM_SCRIPTS_PATH/composer/composer.lock" "$CM_PROJECT_PATH/composer.lock"
  rm -f "$CM_PROJECT_PATH/composer.lock.bak"
}

__composer__create_json()
{
  cm_can_generate "$COMPOSER__JSON"
  if [ "$CM_GENERATE_FILE" != "" ]; then
    cat > "$CM_GENERATE_FILE" <<- EOF
{
  "require": {
    "ext-mbstring": "*",
    "ext-imagick": "*",
    "php": "^5.6"
  }
}
EOF
  fi
}
